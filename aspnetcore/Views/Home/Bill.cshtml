
@{
    ViewData["Title"] = "Bill";
}
@section header{
    <link href="~/lib/iview/iview.css" rel="stylesheet" />
    <link href="~/lib/datepicker/datepicker3.css" rel="stylesheet" />
}
<section class="content-header">
    <h1>
        账单
    </h1>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-8" id="app">
            <div class="box">
                <div class="box-body">
                    <div class="col-md-8">
                        <a class="btn btn-primary btn-sm" v-on:click="showEditing">新增</a>
                        <span style="margin-left:10px">本月合计：支出~{{Stat.outlay}} 收入~{{Stat.income}} 净支出~{{Stat.total}}</span>
                    </div>
                    <div class="col-md-2"></div>
                    <div class="col-md-2">
                        <div class="input-group">
                            <input type="text" class="form-control" id="datepicker" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>日期</th>
                                <th>金额</th>
                                <th>记录时间</th>
                                <th>备注</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(b,index) in Bills" :key="b.Id">
                                <td>{{index}}</td>
                                <td>{{billDate(b.PayDate)}}</td>
                                <td>{{b.Amount}}</td>
                                <td>{{b.LogTime}}</td>
                                <td>{{b.Remark}}</td>
                            </tr>
                        </tbody>
                    </table>
                    <div id="pager">
                        <Page :total="Page.Total" size="small" :current="Page.Index" :page-size="Page.Size" @@on-change="jumpPage" show-total></Page>
                    </div>
                </div>
            </div>
            <div v-show="ShowEditing" class="box">
                <div class="box-body">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="PayDate">日期</label>
                            <input type="text" id="PayDate" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="txtAmount">金额</label>
                            <input type="text" id="txtAmount" v-model="Editing.Amount" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="txtAmount">类型</label>
                            <select v-model="Editing.FlowType" class="form-control">
                                <option v-for="(f,k) in FlowTypes" :value="k">{{f}}</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="txtRemark">备注</label>
                            <textarea type="text" rows="3" id="txtRemark" v-model="Editing.Remark" class="form-control">
                </textarea>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <a id="btnSave" v-on:click="newBill" class="btn btn-primary">保存</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="box">
                <div class="box-body">
                    <div id="main" style="width: 100%;height:400px"></div>
                </div>
            </div>
        </div>
    </div>
</section>

@section footer{
    <script src="~/js/app.js"></script>
    <script src="~/lib/Vue/vue.js"></script>
    <script src="~/js/extend.js"></script>
    <script src="~/lib/datepicker/bootstrap-datepicker.js"></script>
    <script src="~/lib/datepicker/locales/bootstrap-datepicker.zh-CN.js"></script>
    <script src="~/lib/iview/iview.js"></script>
    <script src="~/lib/echarts/echarts.js"></script>
    <script src="~/lib/echarts/macarons.js"></script>
    <script>
        $(function () {
            var today = new Date();
            $('#datepicker').val(today.Format("yyyy-MM")).datepicker({
                language: "zh-CN",
                format: "yyyy-mm",
                minViewMode: 1,
                clearBtn: true,
                autoclose: true,
                todayBtn: false,
                todayHighlight: true
            }).on("changeDate", function (e) {
                app.Date = $("#datepicker").val();
                if (!app.Date) return;
                app.getBills();
                app.getStatistic();
            });

            $('#PayDate').val(today.Format("yyyy-MM-dd")).datepicker({
                language: "zh-CN",
                format: "yyyy-mm-dd",
                clearBtn: true,
                autoclose: true,
                todayBtn: false,
                todayHighlight: true
            }).on("changeDate", function (e) {
                app.Editing.PayDate = $("#PayDate").val();
            });
        })

        var app = new Vue({
            el: '#app',
            data: {
                Bills: [],
                Stat: {},
                Date: '',
                Editing: {},
                ShowEditing: false,
                Page: {
                    Index: 1,
                    Size: 10,
                    Count: 0,
                    Total: 0
                },
                FlowTypes: {
                    '0': 'Eating', '1': 'Beverage', '2': 'Recharge', '3': 'Game', '4': 'Shopping', '5': 'Rent', '6': 'Credit', '7': 'Other',
                    '101': 'Salary', '102': 'Finance'
                }
            },
            methods: {
                getBills: function () {
                    var $this = this;
                    var param = {
                        pageIndex: this.Page.Index,
                        pageSize: this.Page.Size,
                    };
                    if (this.Date) {
                        param.year = this.Date.substr(0, 4);
                        param.month = this.Date.substr(5, 2);
                    }
                    ApiClient.Get('/api/bill', param, function (e) {
                        if (e.status == 1) {
                            $this.Bills = e.data;
                            $this.Page.PageCount = e.page.count;
                            $this.Page.Total = e.page.total;
                        } else
                            alert(e.msg);
                    })
                },
                getStatistic: function () {
                    getStat(this.Date.replace('-', ''));
                    var $this = this;
                    ApiClient.Get('/api/bill/Statistic', {
                        year: this.Date.substr(0, 4),
                        month: this.Date.substr(5, 2)
                    }, function (e) {
                        if (e.status == 1) {
                            $this.Stat = e.data;
                        } else
                            alert(e.msg);
                    })
                },
                jumpPage: function (page) {
                    this.Page.Index = page;
                    this.getBills();
                },
                billDate: function (date) {
                    return date.substring(0, 10);
                },
                showEditing: function () {
                    this.ShowEditing = true;
                    app.Editing.PayDate = $("#PayDate").val();
                },
                newBill: function () {
                    var $this = this;
                    ApiClient.Post('/api/bill', this.Editing, function (e) {
                        if (e.status == 1) {
                            $this.getBills();
                        } else
                            alert(e.msg);
                    })
                }
            },
            created: function () {
                this.Date = new Date().Format("yyyy-MM");
                this.getBills();
                this.getStatistic();
            }
        })
    
        var myChart = echarts.init(document.getElementById('main'),'macarons');
        var Types = ['Eating', 'Beverage', 'Recharge', 'Game', 'Shopping', 'Rent', 'Credit', 'Other', 'Salary', 'Finance'];
        var SeriesData = [];
        var Selected = {};
        function getStat(month) {
            ApiClient.Get('/api/bill/stat', {
                month: month
            }, function (e) {
                if (e.status == 1) {
                    var arr = new Array;
                    $.each(Types, function (i, key) {
                        var value = e.data[key] || 0;
                        Selected[key] = value > 0;
                        arr.push({
                            name: key,
                            value: value
                        });
                    })
                    SeriesData = arr;
                    genChart();
                } else
                    alert(e.msg);
            })
        }
        function genChart() {
            var option = {
                title: {
                    text: '支出统计',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br/>{b} : {c} ({d}%)"
                },
                legend: {
                    type: 'scroll',
                    orient: 'vertical',
                    right: 10,
                    top: 20,
                    bottom: 20,
                    data: Types,
                    selected: Selected
                },
                series: [
                    {
                        name: '类型',
                        type: 'pie',
                        radius: '55%',
                        center: ['40%', '50%'],
                        data: SeriesData,
                        itemStyle: {
                            emphasis: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        }
                    }
                ]
            };
            myChart.setOption(option);
        }
    </script>
}